<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Upload PDF File to GitHub</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f4f4f4;
        }

        .container {
            width: 400px;
            padding: 20px;
            border-radius: 8px;
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        h2 {
            margin-top: 0;
            text-align: center;
            color: #333;
        }

        form {
            display: flex;
            flex-direction: column;
        }

        input[type="file"], input[type="text"], button {
            margin-bottom: 10px;
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 16px;
        }

        input[type="file"] {
            cursor: pointer;
        }

        button {
            background-color: #007bff;
            color: #fff;
            border: none;
            cursor: pointer;
        }

        button:hover {
            background-color: #0056b3;
        }

        button:active {
            background-color: #0056b3;
            transform: translateY(1px);
        }

        .error {
            color: red;
            font-size: 14px;
            margin-top: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Upload PDF File to GitHub Repository</h2>
        <form id="uploadForm" action="/uploadfilename" method="post">
            <input type="file" id="fileInput" accept=".pdf">
            <input type="text" id="fileName" name="fileName" placeholder="Enter file name">
            <button type="submit">Upload</button>
        </form>
    </div>
    <div class="container">
        <ol class="filename-list">
            <% filenames.forEach(fileName => { %>
                <li class="filename-item">
                    <%= fileName.fileName %>
                    <form action="/delete" method="post">
                        <input type="hidden" name="fileName" value="<%= fileName.fileName %>">
                        <button type="submit">Delete</button>
                      </form>
                    <br>
                </li>
            <% }); %>
        </ol>
    </div>
    

    <script>
        document.getElementById('uploadForm').addEventListener('submit', function(event) {
            event.preventDefault();
    
            const fileInput = document.getElementById('fileInput');
            const file = fileInput.files[0];
            if (!file) {
                alert('Please select a file.');
                return;
            }
    
            const fileNameInput = document.getElementById('fileName');
            let fileName = fileNameInput.value.trim().toLowerCase();

            // Remove ".pdf" from the end of the filename using a regular expression
            fileName = fileName.replace(/\.pdf$/i, '');

// The regular expression /\.pdf$/i matches ".pdf" at the end of the string, regardless of case (i flag)


            if (!fileName) {
                alert('Please enter a file name.');
                return;
            }
    
            const accessToken = '<%= accessToken %>';
            const owner = '<%= owner %>';
            const repo = '<%= repo %>';
            const path = `public/${fileName}.pdf`; // Construct file path
    
            const apiUrl = `https://api.github.com/repos/${owner}/${repo}/contents/${path}`;
    
            // Send filename to the server-side route
            fetch('/uploadfilename', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ fileName: fileName })
            })
            .then(response => {
                if (response.ok) {
                    console.log('Filename sent to server successfully!');
    
                    // Proceed with file upload to GitHub after sending filename
                    const reader = new FileReader();
                    reader.onload = function(event) {
                        const content = event.target.result.split(',')[1]; // Extract content from data URL
    
                        // Fetch current SHA hash of the file
                        fetch(apiUrl)
                            .then(response => response.json())
                            .then(data => {
                                const sha = data.sha;
    
                                // Update file with new content and SHA hash
                                fetch(apiUrl, {
                                    method: 'PUT',
                                    headers: {
                                        'Authorization': `token ${accessToken}`,
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({
                                        message: `Add ${fileName}.pdf`,
                                        content: content,
                                        branch: 'main',
                                        sha: sha // Include the SHA hash
                                    })
                                })
                                .then(response => {
                                    if (response.ok) {
                                        alert('File uploaded successfully!');
                                        // Clear the form fields
                                        location.reload();
                                        // fileInput.value = '';
                                        // fileNameInput.value = '';
                                    } else {
                                        response.json().then(data => {
                                            console.error('Failed to upload file:', data);
                                            alert('Failed to upload file. Check console for details.');
                                        });
                                    }
                                })
                                .catch(error => {
                                    console.error('Error uploading file:', error);
                                    alert('Failed to upload file.');
                                });
                            })
                            .catch(error => {
                                console.error('Error fetching current file data:', error);
                                alert('Failed to fetch current file data.');
                            });
                    };
    
                    reader.readAsDataURL(file); // Read file as data URL
                } else {
                    console.error('Failed to send filename to server.');
                }
            })
            .catch(error => {
                console.error('Error sending filename to server:', error);
            });
        });
    </script>
    
    
</body>
</html>
